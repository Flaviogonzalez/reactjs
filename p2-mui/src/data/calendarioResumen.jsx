const datos = `Fecha Valor
6/1/2023 $12.897,43
13/1/2023 $13.556,68
20/1/2023 $13.707,43
27/1/2023 $13.542,50
3/2/2023 $12.524,25
10/2/2023 $12.229,00
17/2/2023 $12.768,50
24/2/2023 $13.046,50
3/3/2023 $13.329,25
10/3/2023 $21.910,00
17/3/2023 $21.776,75
23/3/2023 $21.392,75
31/3/2023 $23.975,02
5/4/2023 $24.510,50
14/4/2023 $25.856,00
21/4/2023 $28.332,50
28/4/2023 $69.943,04
5/5/2023 $68.816,37
12/5/2023 $76.111,89
19/5/2023 $86.146,52
26/5/2023 $87.780,02
2/6/2023 $87.805,00
9/6/2023 $87.012,48
16/6/2023 $77.521,48
23/6/2023 $79.952,48
30/6/2023 $78.388,72
7/7/2023 $81.704,72
14/7/2023 $82.431,72
21/7/2023 $130.512,68
28/7/2023 $129.797,68
4/8/2023 $123.477,68
11/8/2023 $127.524,18
18/8/2023 $195.252,00
25/8/2023 $221.315,00
1/9/2023 $222.601,00
8/9/2023 $191.791,00
15/9/2023 $210.969,00
22/9/2023 $198.727,00
29/9/2023 $209.505,00
6/10/2023 $240.966,00
12/10/2023 $303.853,00
20/10/2023 $312.646,00
27/10/2023 $258.180,00
3/11/2023 $249.298,00
10/11/2023 $259.974,00
17/11/2023 $247.920,00
24/11/2023 $340.588,00
1/12/2023 $311.785,00
8/12/2023 $363.342,00
15/12/2023 $368.468,00
22/12/2023 $350.437,00
29/12/2023 $351.517,00`;

// Separar las líneas y dividir por espacios
const lineas = datos.split('\n').map(linea => linea.split(/\s+/));

// Obtener encabezados y datos
const encabezados = lineas[0];
const datosArray = lineas.slice(1).map(linea => {
  const objeto = {};
  encabezados.forEach((encabezado, index) => {
    // Convertir la fecha al formato ISO
    if (encabezado === 'Fecha') {
      const [dia, mes, año] = linea[index].split('/');
      objeto['fecha'] = new Date(`${año}-${mes}-${dia}`);
    } else {
      // Convertir el valor a número
      objeto['valor'] = parseFloat(linea[index].replace(/\$|,|\./g, '').replace(',', '.'));
    }
  });
  return objeto;
});

console.log(datosArray);
